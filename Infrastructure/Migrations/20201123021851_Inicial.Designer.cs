// <auto-generated />
using System;
using Infrastructure.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ModeloDataContext))]
    [Migration("20201123021851_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Domain.Entities.Acesso", b =>
                {
                    b.Property<Guid?>("IdAcesso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TempId")
                        .HasColumnType("int");

                    b.HasKey("IdAcesso");

                    b.HasAlternateKey("TempId");

                    b.ToTable("Acesso");
                });

            modelBuilder.Entity("Domain.Entities.Publicacao", b =>
                {
                    b.Property<Guid>("IdPublicacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Conteudo")
                        .HasColumnType("varchar(MAX)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TempId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("IdPublicacao");

                    b.HasAlternateKey("TempId");

                    b.ToTable("Publicacao");
                });

            modelBuilder.Entity("Domain.Entities.PublicacaoTema", b =>
                {
                    b.Property<Guid>("IdPublicacao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTema")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TempId")
                        .HasColumnType("int");

                    b.HasKey("IdPublicacao", "IdTema");

                    b.HasAlternateKey("TempId");

                    b.HasIndex("IdTema");

                    b.ToTable("PublicacaoTema");
                });

            modelBuilder.Entity("Domain.Entities.Tema", b =>
                {
                    b.Property<Guid>("IdTema")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("TempId1")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdTema");

                    b.HasAlternateKey("TempId1");

                    b.ToTable("Tema");
                });

            modelBuilder.Entity("Domain.Entities.PublicacaoTema", b =>
                {
                    b.HasOne("Domain.Entities.Publicacao", "Publicacao")
                        .WithMany("PublicacoesTemas")
                        .HasForeignKey("IdPublicacao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Tema", "Tema")
                        .WithMany("PublicacoesTemas")
                        .HasForeignKey("IdTema")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Publicacao");

                    b.Navigation("Tema");
                });

            modelBuilder.Entity("Domain.Entities.Publicacao", b =>
                {
                    b.Navigation("PublicacoesTemas");
                });

            modelBuilder.Entity("Domain.Entities.Tema", b =>
                {
                    b.Navigation("PublicacoesTemas");
                });
#pragma warning restore 612, 618
        }
    }
}
